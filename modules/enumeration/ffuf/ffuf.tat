#category: fuzzer
#input dependencies: full urls 
#language: go
#####REQUIRED FOR MODULES######
import os
import sys
import re
import subprocess
##### REQUIRED FOR MODULES #####
cwd = os.getcwd()
go_bin_path = f'{cwd}/bins/go/bin'
ffuf_bin_path = f'{cwd}/modules/enumeration/ffuf/bin'  # Ensure this points to a directory for binaries
# Create the directory if it doesn't exist
os.makedirs(ffuf_bin_path, exist_ok=True)
# Set environment variables
os.environ['PATH'] = f'{go_bin_path}:{ffuf_bin_path}:' + os.environ['PATH']
os.environ['GOPATH'] = cwd
os.environ['GOBIN'] = ffuf_bin_path
##### REQUIRED FOR MODULES #####
install_command = f'{go_bin_path}/go install -v github.com/ffuf/ffuf/v2@latest'
os.system(install_command)
try:
    if os.path.exists('absolute_urls.txt'):
        with open('absolute_urls.txt', 'r') as file:
            urls = file.readlines()
        
        for url in urls:
            url = url.strip()
            print(url)
            command = f'{ffuf_bin_path}/ffuf -c -w /usr/share/wfuzz/wordlist/general/common.txt -u {url}/FUZZ -fc 301,302 -p 0.3-2.0 -t 10'
            result = subprocess.run(command, shell=True, capture_output=True, text=True, check=True)
            print(result.stdout)
            
            with open('ffuf.txt', 'a') as output_file:  # Use 'a' to append to the file
                output_file.write(f"URL: {url}\n")
                output_file.write(result.stdout)
                output_file.write("\n")

except Exception as e:
    print("ffuf failed to execute:")
    print(e)