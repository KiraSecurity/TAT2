#category:subdomain discovery
#input dependencies: domain(s)
#language: go

import os
import re
import subprocess

# Set the current working directory
cwd = os.getcwd()

# Define the paths
go_bin_path = f'{cwd}/bins/go/bin'
amass_bin_path = f'{cwd}/modules/enumeration/amass/bin'

# Create the directory if it doesn't exist
os.makedirs(amass_bin_path, exist_ok=True)

# Set environment variables
os.environ['PATH'] = f'{go_bin_path}:{amass_bin_path}:' + os.environ['PATH']
os.environ['GOPATH'] = cwd
os.environ['GOBIN'] = amass_bin_path

# Install amass if not already installed
install_command = f'{go_bin_path}/go install -v github.com/owasp-amass/amass/v4/...@master'
os.system(install_command)

# Get the domain from user input
domain = input("Insert SINGLE domain you would like to run Amass Scanner on: ")

# Define the command to run amass
command = f'{amass_bin_path}/amass enum -d {domain} -timeout 1'

try:
    # Run the command and capture the output
    result = subprocess.run(command, shell=True, capture_output=True, text=True)

    # Extract URLs from the result
    urls = set(re.findall(r"(?:https?://)?(?:[-\w]+\.)*{}(?:[-\w./?%&=]*)".format(re.escape(domain)), result.stdout))

    # Save the URLs to a file
    with open('urls.txt', 'w') as f:
        f.write('\n'.join(urls))

except Exception as e:
    print("Amass failed to execute:")
    print(e)


